name: Context testing
on:
    push:
        branches: ["master", "main"]
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    dump_contexts_to_log:
        runs-on: ubuntu-latest
        if: startsWith(github.event.head_commit.message, 'cut version')
        steps:
            - name: Dump GitHub context
              id: github_context_step
              run: echo '${{ toJSON(github) }}'
            - name: Dump job context
              run: echo '${{ toJSON(job) }}'
            - name: Dump steps context
              run: echo '${{ toJSON(steps) }}'
            - name: Dump runner context
              run: echo '${{ toJSON(runner) }}'
            - name: Dump strategy context
              run: echo '${{ toJSON(strategy) }}'
            - name: Dump matrix context
              run: echo '${{ toJSON(matrix) }}'
            - name: Get Version
              id: get-version
              run: |
                  GITHUB_PR_TITLE="${{github.event.head_commit.message}}"
                  GITHUB_PR_TITLE="${GITHUB_PR_TITLE^^}"
                  GITHUB_PR_TITLE="${GITHUB_PR_TITLE#"CUT VERSION "}"
                  GITHUB_PR_TAG="${GITHUB_PR_TITLE%% *}"
                  echo "::set-output name=version::$GITHUB_PR_TAG"
            - name: Create Tag
              uses: actions/github-script@v3
              env:
                  TAG: ${{ steps.get-version.outputs.version }}
              with:
                  github-token: ${{ github.token }}
                  script: |
                      github.git.createRef({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                      ref: "refs/tags/${{ steps.get-version.outputs.version }}",
                        sha: context.sha
                      })
            - name: Create Release
              uses: actions/github-script@v3
              with:
                  github-token: ${{ github.token }}
                  script: |
                      github.repos.createRelease({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                      tag_name: "${{ steps.get-version.outputs.version }}",
                      })
